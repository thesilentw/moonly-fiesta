Class GrenThrower : MFWeapon {

	default {
		Radius 20;
		Height 16;
		Weapon.SelectionOrder 2500;
		+WEAPON.NOAUTOFIRE
		+WEAPON.NOAUTOAIM
		Weapon.AmmoUse 1;
		Weapon.AmmoGive 999;
		Weapon.AmmoType "RocketAmmo";
		Weapon.SlotNumber 5;
		Inventory.PickupMessage "Grabbed some Grenades.";	
	}

	States {
		Spawn:
			LAUN A -1;
			Stop;
		Ready:
			TGRN A 1 A_WeaponReady();
			Loop;
		Deselect:
			TGRN A 1 A_Lower();
			Loop;
		Select: 
			TGRN A 1 A_Raise();
			Loop;
		Fire: 
			TGRN A 10 A_PlaySound("weapons/grenade_pinpull", CHAN_WEAPON);
		Holding:
			TGRN A 15;
			TNT1 A 0 A_Refire("Holding");
			Goto Throw;
		Throw:
			TGRN B 15 A_FireProjectile("GrenMIRVThrown", 0, 1, 0, 0, 0, -1);
			TGRN C 30;
			Goto Ready;
	}	
}


Class GrenFragThrown : Actor {
	
	bool logDeath, logGrenade, logDetonate, logMushroom, logAll;

	override void PostBeginPlay() {
		logAll = true;
		super.PostBeginPlay();
	}
	
	default {
		Radius 8;
        Height 8;
        Speed 50;
        Scale 0.5;
        DamageFunction (random(20,30));
        BounceType "Doom";
        BounceFactor 0.25; //.35
        WallBounceFactor 0.40; //.75
        Gravity 0.60;
        ReactionTime 85;
        Species "Grenade";
        DamageType "Explosive";
        Projectile;
		DeathSound "weapons/thumper_explosionamped";
        +THRUGHOST
        +THRUSPECIES
        +BOUNCEONWALLS
        +BOUNCEONFLOORS
        +BOUNCEONCEILINGS
        +ALLOWBOUNCEONACTORS
        -NOGRAVITY
        +DONTGIB
        +MOVEWITHSECTOR
        +EXTREMEDEATH
        +ROLLCENTER
        +ROLLSPRITE
        +USEBOUNCESTATE
        +CANBOUNCEWATER
        +DONTBLAST
        +DONTTHRUST
		+ROCKETTRAIL
		Obituary "Once you've pulled the pin on Mr. Grenade, he is no longer your friend, %o.";
	}
	
	States {
		Spawn:
			SGRN A 1 Bright;
			Loop;
		Death:
			MISL B 8 Bright {
				if (logAll) {
					Console.printf("projectile went to death state");
				}	
			}
			MISL B 15 A_Explode();
			MISL C 6 Bright;
			MISL D 4 Bright;
			Stop;
	}
}

Class GrenMIRVThrown : GrenFragThrown {

	default {
		BounceType "None";
		BounceFactor 0.0;
        WallBounceFactor 0.0;
	}

	override void PostBeginPlay() {
		logAll = true;
		super.PostBeginPlay();
	}
	
	States {
		Spawn:
			SGRN A 1 Bright;
			Loop;
		Death:
			TNT1 A 0 {
				int subCount = 8;
				int subAngleMult = 45;
				while (subCount > 0) {
					A_SpawnItemEx("GrenMIRVSubmun", 0, 0, random(0,5), 0.12, 0, 0.15, ((subAngleMult*subCount)+random(-10,10)), SXF_NOCHECKPOSITION | SXF_TRANSFERTRANSLATION | SXF_MULTIPLYSPEED);
					if (logAll) {
						Console.printf("MIRV child spawned, angle %i", subAngleMult*subCount);
					}
					subCount--;
				}
				
				//A_SpawnItemEx("GrenMIRVSubmun", 0, 0, 5, 1, 1, 0.1, 45, SXF_NOCHECKPOSITION | SXF_MULTIPLYSPEED);
				//A_SpawnItemEx("GrenMIRVSubmun", 0, 0, 5, 1, 0, 0.1, 90, SXF_NOCHECKPOSITION | SXF_MULTIPLYSPEED);
				//A_SpawnItemEx("GrenMIRVSubmun", 0, 0, 5, 1, -1, 0.1, 135, SXF_NOCHECKPOSITION | SXF_MULTIPLYSPEED);
				//A_SpawnItemEx("GrenMIRVSubmun", 0, 0, 5, 0, -1, 0.1, 180, SXF_NOCHECKPOSITION | SXF_MULTIPLYSPEED);
				//A_SpawnItemEx("GrenMIRVSubmun", 0, 0, 5, -1, -1, 0.1, 225, SXF_NOCHECKPOSITION | SXF_MULTIPLYSPEED);
				//A_SpawnItemEx("GrenMIRVSubmun", 0, 0, 5, -1, 0, 0.1, 270, SXF_NOCHECKPOSITION | SXF_MULTIPLYSPEED);
				//A_SpawnItemEx("GrenMIRVSubmun", 0, 0, 5, -1, 1, 0.1, 315, SXF_NOCHECKPOSITION | SXF_MULTIPLYSPEED);
			}
			MISL B 10 Bright {
				if (logAll) {
					Console.printf("MIRV parent went to death state");
				}
				A_Explode();				
			}			
			MISL C 6 Bright;
			MISL D 4 Bright;
			Stop;
	}

}

Class GrenMIRVSubmun : GrenFragThrown {

	int lifetime;
	
	property lifetime: lifetime;
	
	default {
		GrenMIRVSubmun.lifetime 35;
		BounceFactor 0.35;
        WallBounceFactor 0.35;
		Gravity 0.85;
        Scale 0.35;
        DamageFunction (random(10,20));
		DeathSound "";
	}

	override void PostBeginPlay() {
		logAll = true;
		super.PostBeginPlay();
	}
	
	States {
		Spawn:
			SGRN A 10 Bright; //A_ChangeVelocity(x:25, y:vely, z:velz, flags:CVF_RELATIVE);
			Goto Flight;
		Flight:
			SGRN A 1 Bright;
			Loop;
		Death:
			SGRN A 1 {
				if (logAll) {Console.printf("MIRV submunition went to death state");}
			}
			SGRN A 5 A_Jump(256, "Delay1","Delay2","Delay3","Delay4","Delay5","Delay6");
		Delay1:	
			SGRN A 1;
			TNT1 A 0 A_Jump(256, "Boom");
		Delay2:	
			SGRN A 10;
			TNT1 A 0 A_Jump(256, "Boom");
		Delay3:	
			SGRN A 20;
			TNT1 A 0 A_Jump(256, "Boom");
		Delay4:	
			SGRN A 25;
			TNT1 A 0 A_Jump(256, "Boom");
		Delay5:	
			SGRN A 7;
			TNT1 A 0 A_Jump(256, "Boom");
		Delay6:	
			SGRN A 15;
			TNT1 A 0 A_Jump(256, "Boom");
		Boom:
			MISL B 6 Bright {
				A_PlaySound("weapons/mirv_explosion", CHAN_AUTO);
				A_Explode();
			}
			MISL C 5 Bright;
			MISL D 4 Bright;
			Stop;
	}
}


Class GrenTearThrown: GrenFragThrown {
		
	default {
		DamageFunction (0);
		DamageType "None";
	}
	
	override void PostBeginPlay() {
		logAll = true;
		super.PostBeginPlay();
	}
	
	States {
		Spawn:
			SGRN A 1 Bright;
			Loop;
		Death:
			MISL B 8 Bright {
				if (logAll) {
					Console.printf("projectile went to death state");
				}
				//A_Explode();
				A_SpawnItemEx("tearGasCloud", random(-2,2), random(-2,2), random(1,3), random(-2,2), random(-2,2), 0);
				A_SpawnItemEx("tearGasCloud", random(-2,2), random(-2,2), random(1,3), random(-2,2), random(-2,2), 0);
				A_SpawnItemEx("tearGasCloud", random(-2,2), random(-2,2), random(1,3), random(-2,2), random(-2,2), 0);
				A_SpawnItemEx("tearGasCloud", random(-2,2), random(-2,2), random(1,3), random(-2,2), random(-2,2), 0);
			}
			MISL C 6 Bright;
			MISL D 4 Bright;
			Stop;
	}
	
	
}

Class tearGasCloud : Actor {

	int gasDuration;
	int cloudRadius;
	
	property gasDuration: gasDuration;
	property cloudRadius: cloudRadius;
	
	default {
		tearGasCloud.cloudRadius 64;
		tearGasCloud.GasDuration 4;
		Radius 32;
		Height 64;
		Mass 0x7fffffff;
		+NOBLOCKMAP
		+NOGRAVITY
		+DROPOFF
		+NODAMAGETHRUST
		+DONTSPLASH
		+FLOAT
		FloatSpeed 10;
		//PoisonDamage 10, 10, 35;
		//+FOILINVUL
		//+CANBLAST
		+BLOODLESSIMPACT
		//+BLOCKEDBYSOLIDACTORS
		RenderStyle "Translucent";
		Alpha 0.4;
		//DeathSound "PoisonShroomDeath";
		//DamageType TearGas;
	}	
	States {
		Spawn:
			GTXM A 1;
			GTXM A 1 A_Scream();
			GTXM ABCDE 10 A_Explode(1, invoker.cloudRadius, XF_HURTSOURCE, false, invoker.cloudRadius);
			goto CloudLoop;
		CloudLoop:
			GTXM ABCD 10 A_Explode(1, invoker.cloudRadius, XF_HURTSOURCE, false, invoker.cloudRadius);
			GTXM E 10 {
				A_Explode(1, invoker.cloudRadius, XF_HURTSOURCE, false, invoker.cloudRadius);
				if (invoker.gasDuration > 0) {
					invoker.gasDuration--;
					return resolveState("CloudLoop");
					}
				else return resolveState("Death");
			}
		Death:
			GTXS ABCDE 7 {
				A_Explode(1, invoker.cloudRadius, XF_HURTSOURCE, false, invoker.cloudRadius);
				A_FadeOut(0.1);
			}
			Stop;
	}
}