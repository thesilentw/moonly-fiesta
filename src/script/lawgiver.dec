ACTOR Lawgiver : Weapon {
	inventory.pickupMessage "Well, look at that. I must be a Judge."
	Weapon.AmmoType1 "LawgiverMag"
	Weapon.AmmoUse1 0
	Weapon.AmmoGive1 0
	Weapon.AmmoType2 "clip"
	Weapon.AmmoUse2 0
	Weapon.AmmoGive2 20
	weapon.slotNumber "2"
	weapon.upsound "weapons/lg_deploy"
	+weapon.Ammo_Optional
	+Weapon.Ammo_CheckBoth
	
	/* --DESIGN--	
	LawgiverMag - 14 shots
	LawgiverFireMode 0 - Standard - 1 bullet per shot
	LawgiverFireMode 1 - Armor Piercing - 2 bullets per shot, pierces enemies
	LawgiverFireMode 2 - Heatseeker - 3 bullets per shot, tracks enemies
	LawgiverFireMode 3 - High Ex - 7 bullets per shot - minirocket
	LawgiverFireMode 4 - Incendiary - 4 bullets per shot - minirocket with flame
	LawgiverFireMode 5 - Ricochet - 1 bullet per shot - bounces
	LawgiverFireMode 6 - Auotfire/burst *NOT IMPLEMENTED* - 3-round burst, ammo discount.
	*/
	
	states {
		Spawn:
			LAWP A -1
			Stop
		Ready:
			LAWG A 1 A_WeaponReady(WRF_ALLOWRELOAD)
			Loop
		Select:
			LAWG A 1 A_Raise
			Loop
		Deselect:
			LAWG A 1 A_Lower
			Loop			
		Fire:
			TNT1 A 0 {
				if (countInv("LawgiverMag") < 1) {
					if (countInv("clip") < 1) {
						return state("NoAmmo");
					} else {
						return state("DryReload");
					}
				} else {return state ("");}
			}
			TNT1 A 0 {
				if (countInv("LawgiverFireMode") == 0) {
					return state("FireSTD"); // we already checked if we have at least 1 shot
				} else if (countInv("LawgiverFireMode") == 1) {
					if (countInv("LawgiverMag") >= 2) {
						return state("FireAP");
					} else {
						return state("Reload");
					}
				} else if (countInv("LawgiverFireMode") == 2) {
					if (countInv("LawgiverMag") >= 3) {
						return state("FireHEAT");
					} else {
						return state("Reload");
					}
				} else if (countInv("LawgiverFireMode") == 3) {
					if (countInv("LawgiverMag") >= 7) {
						return state("FireHIEX");
					} else {
						return state("Reload");
					}
				} else if (countInv("LawgiverFireMode") == 4) {
					if (countInv("LawgiverMag") >= 4) {
						return state("FireINC");
					} else {
						return state("Reload");
					}
				} else if (countInv("LawgiverFireMode") == 5) {
					if (countInv("LawgiverMag") >= 1) {
						return state("FireRICO");
					} else {
						return state("Reload");
					}
				} else {
					return state("NoAmmo");
				}
			}
		AltFire:
			TNT1 A 0 {
				if (countInv("LawgiverFireMode") > 4) {
					A_SetInventory("LawgiverFireMode", 0);
				}
				else {
					A_GiveInventory("LawgiverFireMode", 1);
				}
			}
			TNT1 A 0 {
				if (countInv("LawgiverFireMode") == 0) {
					return state("SwitchToSTD");
				} else if (countInv("LawgiverFireMode") == 1) {
					return state("SwitchToAP");
				} else if (countInv("LawgiverFireMode") == 2) {
					return state("SwitchToHEAT");
				} else if (countInv("LawgiverFireMode") == 3) {
					return state("SwitchToHIEX");
				} else if (countInv("LawgiverFireMode") == 4) {
					return state("SwitchToINC");
				} else {
					return state("SwitchToRICO");
				}
			}	
		SwitchToSTD:
			TNT1 A 0 A_StopSound(CHAN_WEAPON)
			LAWG A 10 A_PlaySound("weapons/lg_ammoswitched")
			LAWG A 1 A_PlaySound("weapons/lg_stdselected")
			Goto Ready
		SwitchToAP:
			TNT1 A 0 A_StopSound(CHAN_WEAPON)
			LAWG A 10 A_PlaySound("weapons/lg_ammoswitched")
			LAWG A 1 A_PlaySound("weapons/lg_apselected")
			Goto Ready
		SwitchToHEAT:
			TNT1 A 0 A_StopSound(CHAN_WEAPON)
			LAWG A 10 A_PlaySound("weapons/lg_ammoswitched")
			LAWG A 1 A_PlaySound("weapons/lg_seekerselected")
			Goto Ready
		SwitchToHIEX:
			TNT1 A 0 A_StopSound(CHAN_WEAPON)
			LAWG A 10 A_PlaySound("weapons/lg_ammoswitched")
			LAWG A 1 A_PlaySound("weapons/lg_hiexselected")
			Goto Ready
		SwitchToINC:
			TNT1 A 0 A_StopSound(CHAN_WEAPON)
			LAWG A 10 A_PlaySound("weapons/lg_ammoswitched")
			LAWG A 1 A_PlaySound("weapons/lg_incselected")
			Goto Ready
		SwitchToRICO:
			TNT1 A 0 A_StopSound(CHAN_WEAPON)
			LAWG A 10 A_PlaySound("weapons/lg_ammoswitched")
			LAWG A 1 A_PlaySound("weapons/lg_ricoselected")
			Goto Ready
		/*
		SwitchToAUTO:
			TNT1 A 0 A_StopSound(CHAN_WEAPON)
			LAWG A 10 A_PlaySound("weapons/lg_ammoswitched")
			LAWG A 1 A_PlaySound("weapons/lg_autoselected")
			Goto Ready
		*/	
		FireAP: // Now with punchthrough
			TNT1 A 0 {
				A_GunFlash;
				A_PlaySound("weapons/lg_firesingle", CHAN_WEAPON);
				A_TakeInventory("LawgiverMag", 2);// 7 shots per mag
				//A_FireBullets(frandom(-0.1,0.1), frandom(-0.1,0.1), 3, 20, "BulletPuff", FBF_ExplicitAngle|FBF_NoRandom|FBF_UseAmmo);
				A_RailAttack(60, 0, true, "none", "none", RGF_SILENT, 0, "APBulletPuff", frandom(-0.1,0.1), frandom(-0.1,0.1), 0, 0, 0, 0, "null", 0, 0, 6);
			}
			LAWG A 2
			LAWG BC 3
			LAWG AAAAAA 1 A_ReFire 
			Goto Ready	
		FireHEAT: // Needs to be Seeker round
			TNT1 A 0 {
				A_GunFlash;
				A_PlaySound("weapons/lg_firesingle", CHAN_WEAPON);
				A_TakeInventory("LawgiverMag", 3); // 4 shots per mag
				A_FireBullets(1,1,1,40,"BulletPuff",FBF_USEAMMO);
			}
			LAWG A 2
			LAWG BC 5
			LAWG AAAAAA 1 A_ReFire 
			Goto Ready	
		FireHIEX: // Fast rocket, essentially
			TNT1 A 0 {
				A_GunFlash;
				A_PlaySound("weapons/lg_firesingle", CHAN_WEAPON);
				A_TakeInventory("LawgiverMag", 7); // 2 shots per mag
				A_FireBullets(1,1,1,200,"BulletPuff",FBF_USEAMMO);
			}
			LAWG A 2
			LAWG BC 5
			LAWG AAAAAA 1 A_ReFire 
			Goto Ready	
		FireINC: // Fast rocket with BURNING, ahahaha
			TNT1 A 0 {
				A_GunFlash;
				A_PlaySound("weapons/lg_firesingle", CHAN_WEAPON);
				A_TakeInventory("LawgiverMag", 4); // 3 shots per mag
				A_FireBullets(1,1,1,200,"BulletPuff",FBF_USEAMMO);
			}
			LAWG A 2
			LAWG BC 5
			LAWG AAAAAA 1 A_ReFire 
			Goto Ready	
		FireRICO: // pwing pwang pwong AAAGH
			TNT1 A 0 {
				A_GunFlash;
				A_PlaySound("weapons/lg_firesingle", CHAN_WEAPON);
				A_TakeInventory("LawgiverMag", 1); // 14 shots per mag
				A_FireProjectile("LawgiverRICOShot", 1, true);
			}
			LAWG A 2
			LAWG BC 3
			LAWG AAAAAA 1 A_ReFire 
			Goto Ready
		FireSTD: //needs to be here, not at the beginning, as a fallthrough safety
			TNT1 A 0 {
				A_GunFlash;
				A_PlaySound("weapons/lg_firesingle", CHAN_WEAPON);
				A_TakeInventory("LawgiverMag", 1); // 14 shots per mag
				A_FireBullets(1,1,1,40);
			}
			LAWG A 2
			LAWG BC 3
			LAWG AAAAAA 1 A_ReFire 
			Goto Ready
		NoAmmo:
			TNT1 A 0 {
				A_StopSound(CHAN_WEAPON);
				//A_SetInventory("LawgiverFireMode", 0);
			}
			LAWG A 10 A_PlaySound("weapons/lg_outofammo")
			Goto Ready
		Flash:
			TNT1 A 4 BRIGHT A_Light2
			TNT1 A 1 A_Light0
			Goto LightDone
		Reload:
			TNT1 A 0 {
				if (countInv("LawgiverMag") == 14) { // if mag's full...
					if (countInv("clip") < 1) { // ..and we have no reserve, tell us!
						return state("NoAmmo");
					} else {
						return state("Ready"); // otherwise ignore the reload.
					}
				} else {return state ("");}
			}
			LAWG R 1 A_PlaySound("weapons/shotgr", CHAN_WEAPON)
			LAWG R 1 Offset(0,38)
			LAWG R 1 Offset(0,44)
			LAWG R 1 Offset(0,52)
			LAWG R 1 Offset(0,62)
			LAWG R 1 Offset(0,72)
			LAWG R 1 Offset(0,82)
			TNT1 A 0 A_GiveInventory("LawgiverMag", 14)
			TNT1 A 8 A_TakeInventory("clip", 1) // 1 clip is 1 magazine. lol
			LAWG R 1 Offset(0,82)
			LAWG R 1 Offset(0,72)
			LAWG R 1 Offset(0,62)
			LAWG R 1 Offset(0,52)
			LAWG R 1 Offset(0,44)
			LAWG R 1 Offset(0,38)
			LAWG R 1 Offset(0,35)
			LAWG R 1 Offset(0,32)
			Goto Ready
		DryReload: //not implemented
			Goto Reload
	}
}

ACTOR LawgiverMag : Ammo {
	Inventory.MaxAmount 14
	+IGNORESKILL
}

ACTOR LawgiverFireMode : Inventory {
	Inventory.MaxAmount 6 //autofire not implemented
	// 0 - Standard
	// 1 - Armor Piercing
	// 2 - Heatseeker
	// 3 - High Ex
	// 4 - Incendiary
	// 5 - Ricochet		 
	// 6 - Auotfire/burst *NOT IMPLEMENTED*
	+IGNORESKILL
}

/*
ACTOR LawgiverSTDShot {
	Obituary "%k rendered their verdict on %o's crimes in 10mm FMJ."
	Decal BulletChip
}

ACTOR LawgiverAPShot {
	Obituary "%o needs to pick better cover if he's up against %k's Armor Piercing rounds."
	Decal BulletChip
}
*/
ACTOR LawgiverHEATShot : FastProjectile {
	Obituary "%o discovered that there's no escape from %k's Heatseeker rounds."
	Decal BulletChip
}

ACTOR LawgiverHIEXShot : FastProjectile {
	Obituary "%k's going to be picking pieces of %o out of his teeth after connecting with that High-Ex round."
	Decal DoomImpScorch
}

ACTOR LawgiverINCShot : FastProjectile {
	Obituary "%o felt the burning sensation of a Hotshot round from %k's Lawgiver."
	Decal DoomImpScorch
}

ACTOR LawgiverRICOShot {
	Obituary "%o was surprised to find out %k's Lawgiver was set on Ricochet."
	Decal BulletChip
	Radius 5
	Speed 100
	Damage 10
	Gravity 1
	BounceFactor 0.99
	BounceCount 5
	DamageType None
	Scale 0.5
	Projectile
	Alpha 0.9
	BounceType Hexen
	DeathSound "weapons/lpst_impact"
	//BounceSound  // for bounce
	States {
		Spawn:
			BAL2 A 1 Bright
			Loop
		Death:
			BAL2 CDE 2 Bright
		Stop
	}
}

ACTOR LawgiverAUTOShot {
	Obituary "%o had Justice served at 2500 RPM, courtesy of %k's Lawgiver."
	Decal BulletChip
}

ACTOR APBulletPuff : BulletPuff {
	+ALWAYSPUFF
}
//eof